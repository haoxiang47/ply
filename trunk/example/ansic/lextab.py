# lextab.py. This file automatically created by PLY (version 2.3). Don't edit!
_lextokens    = {'DO': None, 'SHORT': None, 'RETURN': None, 'RSHIFTEQUAL': None, 'DEFAULT': None, 'VOID': None, 'NE': None, 'CHAR': None, 'WHILE': None, 'LNOT': None, 'STATIC': None, 'SCONST': None, 'LSHIFT': None, 'EXTERN': None, 'CONST': None, 'SIZEOF': None, 'CONDOP': None, 'MINUS': None, 'DIVIDE': None, 'CASE': None, 'LAND': None, 'RPAREN': None, 'FCONST': None, 'SEMI': None, 'REGISTER': None, 'MODEQUAL': None, 'UNSIGNED': None, 'LONG': None, 'PLUSPLUS': None, 'SWITCH': None, 'LSHIFTEQUAL': None, 'PLUS': None, 'COMMA': None, 'LOR': None, 'PERIOD': None, 'CCONST': None, 'RBRACKET': None, 'TYPEDEF': None, 'GT': None, 'XOR': None, 'GOTO': None, 'FOR': None, 'UNION': None, 'AUTO': None, 'ENUM': None, 'EQUALS': None, 'DIVEQUAL': None, 'ELSE': None, 'PLUSEQUAL': None, 'GE': None, 'LE': None, 'ICONST': None, 'ARROW': None, 'ELLIPSIS': None, 'LPAREN': None, 'RBRACE': None, 'MINUSMINUS': None, 'TIMES': None, 'EQ': None, 'ID': None, 'IF': None, 'AND': None, 'TYPEID': None, 'LBRACE': None, 'STRUCT': None, 'RSHIFT': None, 'COLON': None, 'INT': None, 'DOUBLE': None, 'MINUSEQUAL': None, 'FLOAT': None, 'XOREQUAL': None, 'SIGNED': None, 'LT': None, 'BREAK': None, 'CONTINUE': None, 'VOLATILE': None, 'LBRACKET': None, 'NOT': None, 'ANDEQUAL': None, 'OREQUAL': None, 'TIMESEQUAL': None, 'OR': None, 'MOD': None}
_lexreflags   = 0
_lexliterals  = ''
_lexstateinfo = {'INITIAL': 'inclusive'}
_lexstatere   = {'INITIAL': [('(?P<t_NEWLINE>\\n+)|(?P<t_ID>[A-Za-z_][\\w_]*)|(?P<t_comment> /\\*(.|\\n)*?\\*/)|(?P<t_preprocessor>\\#(.)*?\\n)|(?P<t_FCONST>((\\d+)(\\.\\d+)(e(\\+|-)?(\\d+))? | (\\d+)e(\\+|-)?(\\d+))([lL]|[fF])?)|(?P<t_ICONST>\\d+([uU]|[lL]|[uU][lL]|[lL][uU])?)|(?P<t_CCONST>(L)?\\\'([^\\\\\\n]|(\\\\.))*?\\\')|(?P<t_SCONST>\\"([^\\\\\\n]|(\\\\.))*?\\")|(?P<t_ELLIPSIS>\\.\\.\\.)|(?P<t_PLUSPLUS>\\+\\+)|(?P<t_LOR>\\|\\|)|(?P<t_RSHIFTEQUAL>>>=)|(?P<t_TIMESEQUAL>\\*=)|(?P<t_LSHIFTEQUAL><<=)|(?P<t_PLUSEQUAL>\\+=)|(?P<t_OREQUAL>\\|=)|(?P<t_XOREQUAL>^=)|(?P<t_RBRACKET>\\])|(?P<t_LE><=)|(?P<t_PERIOD>\\.)|(?P<t_RSHIFT>>>)|(?P<t_LPAREN>\\()|(?P<t_NE>!=)|(?P<t_RBRACE>\\})|(?P<t_MINUSMINUS>--)|(?P<t_MINUSEQUAL>-=)|(?P<t_MODEQUAL>%=)|(?P<t_OR>\\|)|(?P<t_LBRACE>\\{)|(?P<t_ANDEQUAL>&=)|(?P<t_DIVEQUAL>/=)|(?P<t_ARROW>->)|(?P<t_TIMES>\\*)|(?P<t_CONDOP>\\?)|(?P<t_XOR>\\^)|(?P<t_LBRACKET>\\[)|(?P<t_GE>>=)|(?P<t_RPAREN>\\))|(?P<t_LAND>&&)|(?P<t_LSHIFT><<)|(?P<t_EQ>==)|(?P<t_PLUS>\\+)|(?P<t_NOT>~)|(?P<t_COMMA>,)|(?P<t_MOD>%)|(?P<t_DIVIDE>/)|(?P<t_LT><)|(?P<t_AND>&)|(?P<t_SEMI>;)|(?P<t_MINUS>-)|(?P<t_EQUALS>=)|(?P<t_COLON>:)|(?P<t_LNOT>!)|(?P<t_GT>>)', [None, ('t_NEWLINE', 'NEWLINE'), ('t_ID', 'ID'), ('t_comment', 'comment'), None, ('t_preprocessor', 'preprocessor'), None, (None, 'FCONST'), None, None, None, None, None, None, None, None, None, None, (None, 'ICONST'), None, (None, 'CCONST'), None, None, None, (None, 'SCONST'), None, None, (None, 'ELLIPSIS'), (None, 'PLUSPLUS'), (None, 'LOR'), (None, 'RSHIFTEQUAL'), (None, 'TIMESEQUAL'), (None, 'LSHIFTEQUAL'), (None, 'PLUSEQUAL'), (None, 'OREQUAL'), (None, 'XOREQUAL'), (None, 'RBRACKET'), (None, 'LE'), (None, 'PERIOD'), (None, 'RSHIFT'), (None, 'LPAREN'), (None, 'NE'), (None, 'RBRACE'), (None, 'MINUSMINUS'), (None, 'MINUSEQUAL'), (None, 'MODEQUAL'), (None, 'OR'), (None, 'LBRACE'), (None, 'ANDEQUAL'), (None, 'DIVEQUAL'), (None, 'ARROW'), (None, 'TIMES'), (None, 'CONDOP'), (None, 'XOR'), (None, 'LBRACKET'), (None, 'GE'), (None, 'RPAREN'), (None, 'LAND'), (None, 'LSHIFT'), (None, 'EQ'), (None, 'PLUS'), (None, 'NOT'), (None, 'COMMA'), (None, 'MOD'), (None, 'DIVIDE'), (None, 'LT'), (None, 'AND'), (None, 'SEMI'), (None, 'MINUS'), (None, 'EQUALS'), (None, 'COLON'), (None, 'LNOT'), (None, 'GT')])]}
_lexstateignore = {'INITIAL': ' \t\x0c'}
_lexstateerrorf = {'INITIAL': 't_error'}
